# OpenRouter + model routing
openrouter_base_url: "https://openrouter.ai/api/v1"   # OpenAI-compatible endpoint
model: "openai/gpt-5-mini"                  # any OpenRouter model id works
temperature: 0

# LangSmith tracing
langsmith_project: "only-new-coherence"

# Demo thread id (preserves conversation history via checkpointer)
thread_id: "demo-thread-001"

# Paths
paths:
  dataset_path: "data/sample.jsonl"  # system prompt file no longer used

# Tools enabled
tools:
  enabled:
    - coherence_check     # default minimal setup
    # - thinker
    # - critic
    # - summarizer
    # - worker

# All prompts 
prompts:
  system:
    base: |
      You are a helpful data assistant. Use tools when needed. Show concise, correct answers.

  meci:
    addon: |
      You are an expert MECI annotator. Draft labels for each requested pair, then you should call the tools. Use the tool's output to fix conflicts and ensure symmetric reverses for causal pairs.
    user_template: |
      Text:
      {doc_text}

      Pairs to classify (use EXACT pair ids and order):
      {pair_lines}

      Return ONLY a JSON array like:
      {example_json}
      Before answering, you should call the `coherence_check` tool with your draft labels; then output the corrected final array only.
    example_json: |
      [
        {"pair":"T0,T1","label":"CauseEffect"}
      ]

  roles:
    thinker: |
      You are Thinker. Do deep, structured reasoning.
      Produce a concise plan with numbered steps, explicit assumptions, edge cases, and data to verify.
      Do NOT write the final deliverable.
    critic: |
      You are Critic. Be constructive and precise.
      List concrete issues, missing information, incoherences, and constraints.
      Provide actionable fixes as bullet points; do NOT rewrite the whole prediction.
    summarizer: |
      You are Summarizer. Write a crisp summary for a busy reader. Keep the <> tags
      Keep it faithful and concrete, outlining the causal relations between mentions
    worker: |
      You are Worker. Produce the final deliverable for the user task.
      Follow any plans and honor constraints from prior artifacts.
      Return a JSON array like:
      [
        {"pair":"T0,T1","label":"CauseEffect"}
      ]
